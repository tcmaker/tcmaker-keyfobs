<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from /srv/www/d7-master/web/sites/default/files/civicrm/ext/keyfobs/xml/schema/CRM/Keyfobs/Keyfob.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:1e4de0ece755790e81422a0554e6a79c)
 */

/**
 * Database access object for the Keyfob entity.
 */
class CRM_Keyfobs_DAO_Keyfob extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_keyfob';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique Keyfob ID
   *
   * @var int
   */
  public $id;

  /**
   * FK to Contact
   *
   * @var int
   */
  public $contact_id;

  /**
   * the code embedded in the RFID keyfob
   *
   * @var string
   */
  public $code;

  /**
   * The access level.
   *
   * @var int
   */
  public $access_level;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_keyfob';
    parent::__construct();
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'contact_id', 'civicrm_contact', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_Keyfobs_ExtensionUtil::ts('Unique Keyfob ID'),
          'required' => TRUE,
          'where' => 'civicrm_keyfob.id',
          'table_name' => 'civicrm_keyfob',
          'entity' => 'Keyfob',
          'bao' => 'CRM_Keyfobs_DAO_Keyfob',
          'localizable' => 0,
        ],
        'contact_id' => [
          'name' => 'contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_Keyfobs_ExtensionUtil::ts('FK to Contact'),
          'where' => 'civicrm_keyfob.contact_id',
          'table_name' => 'civicrm_keyfob',
          'entity' => 'Keyfob',
          'bao' => 'CRM_Keyfobs_DAO_Keyfob',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Contact',
        ],
        'code' => [
          'name' => 'code',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Keyfobs_ExtensionUtil::ts('Code'),
          'description' => CRM_Keyfobs_ExtensionUtil::ts('the code embedded in the RFID keyfob'),
          'required' => TRUE,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_keyfob.code',
          'table_name' => 'civicrm_keyfob',
          'entity' => 'Keyfob',
          'bao' => 'CRM_Keyfobs_DAO_Keyfob',
          'localizable' => 0,
        ],
        'access_level' => [
          'name' => 'access_level',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Keyfobs_ExtensionUtil::ts('Access Level'),
          'description' => CRM_Keyfobs_ExtensionUtil::ts('The access level.'),
          'where' => 'civicrm_keyfob.access_level',
          'default' => '1',
          'table_name' => 'civicrm_keyfob',
          'entity' => 'Keyfob',
          'bao' => 'CRM_Keyfobs_DAO_Keyfob',
          'localizable' => 0,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'keyfob', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'keyfob', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
